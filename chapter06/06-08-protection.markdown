# 6.8 保护

SWIG依据C++一样的规则对公有的成员进行封装，比如，显式声明为公有的声明或使用`using`指令的声明。一般情况下，任何在私有或保护节中的内容都被忽略，内部代码生成器有时候也会查看私有或保护节中的内容，以便可以正确的为默认构造函数与析构函数生成正确代码。监督者类(director)还可以修改非公有虚拟受保护成员的处理方式。

默认情况下，类定义中的成员假设都是私有的，除非你显式给出`public:`声明（这与C++的默认惯例是一致的）。